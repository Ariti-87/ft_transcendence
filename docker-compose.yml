services:
#   db:
#     image: postgres
#     environment:
#       POSTGRES_DB: postgreSQL
#       POSTGRES_USER: arincon
#       POSTGRES_PASSWORD: 123
#     ports:
#       - "5432:5432"
  db:
    image: postgres
    container_name: transcendence-postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ft_transcendence
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5

#   web:
#     build: ./myWebSite
#     command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
#     volumes:
#       - ./myWebSite:/app
#     ports:
#       - "8000:8000"
#     depends_on:
#       - db
  mywebsite:
    build: ./myWebSite
    container_name: transcendence-mywebsite
    # command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
    command: ["sh", "-c", "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"]
    #command: gunicorn my_website.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./myWebSite:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - ft_transcendence

  nginx:
    image: nginx:latest
    container_name: transcendence-nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./myWebSite/static:/static
      - ./myWebSite/media:/media
    ports:
      - "8080:80"
    depends_on:
      mywebsite:
        condition: service_started
    networks:
      - ft_transcendence
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres-data:

networks:
  ft_transcendence:
    name: ft_transcendence


