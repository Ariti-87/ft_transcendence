services:
  db:
    image: postgres:latest
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - "5432"
    networks:
      - ft_transcendence
    restart: unless-stopped
    environment:
      POSTGRES_NAME: ${POSTGRES_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5

  mywebsite:
    build: ./mywebsite
    container_name: django
    command: gunicorn mywebsite.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./mywebsite:/app
      - ./mywebsite/static:/app/static
      - ./mywebsite/media:/app/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - ft_transcendence

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./mywebsite/static:/static
      - ./mywebsite/media:/media
    ports:
      - "8080:8080"
    depends_on:
      mywebsite:
        condition: service_started
    networks:
      - ft_transcendence
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:

networks:
  ft_transcendence:
    name: ft_transcendence


